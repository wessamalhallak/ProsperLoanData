knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
head(RawData)
# Load the Data
RawData<-read.csv("prosperLoanData.csv")
head(RawData)
head(read.csv("prosperLoanData.csv_variables.tsv","t"))
head(read.csv("prosperLoanData.csv_variables.tsv","rt"))
head(read.delim2("prosperLoanData.csv_variables.tsv",""))
head(read.delim2("prosperLoanData.csv_variables.tsv"))
head(read.delim2("prosperLoanData_variables.tsv"))
read.delim2("prosperLoanData_variables.tsv")
read.table("prosperLoanData_variables.tsv",)
read.table("prosperLoanData_variables.tsv")
read.table("prosperLoanData_variables.tsv",sep="")
read.table(file="prosperLoanData_variables.tsv",sep="")
read.delim(file="prosperLoanData_variables.tsv")
Variable=read.delim(file="prosperLoanData_variables.tsv")
View(Variable)
View(RawData)
knitr::opts_chunk$set(echo = TRUE)
Variable<-read.delim(file="prosperLoanData_variables.tsv")
head(Variable)
testsample<- sample(RawData,50)
testsample<- sample(x = RawData,size = (50,))
testsample<- sample(x = RawData,size = (50,100))
testsample<- sample_frac(x = RawData,50)
testsample<- sample_frac(x = RawData,50)
testsample<- sample_n(tbl = RawData,20)
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
lib
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
testsample<- sample_n(tbl = RawData,20)
View(testsample)
test <- "YYYY-MM-DDT00:00:00.000-08:00"
as.POSIXct(test)
test <- "2013-12-25T04:32:16.500-08:00"
z <- as.POSIXct(test,format="%Y-%m-%dT%H:%M:%OS")
op <- options(digits.secs = 3)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
View(testsample)
testsample<- sample_n(tbl = RawData,300)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=testsample,aes(x=ListingCreationDate,y=IncomeRange))
testsample<- sample_n(tbl = RawData,300)
ggplot(data=testsample,aes(x=ListingCreationDate,y=IncomeRange))
ggplot(data=testsample,aes(x=ListingCreationDate,y=IncomeRange))+
geom_point()
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=testsample,aes(x=ListingCreationDate,y=IncomeRange))+
geom_point()
testsample<- sample_n(tbl = RawData,30000)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=testsample,aes(x=ListingCreationDate,y=IncomeRange))+
geom_point(alpha=0.01)
ggplot(data=testsample,aes(x=ListingCreationDate,y=DebtToIncomeRatio))+
geom_point(alpha=0.01)
ggplot(data=testsample,aes(x=ListingCreationDate))+
geom_histogram()
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram()
View(testsample)
View(Variable)
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
RawData<-read.csv("prosperLoanData.csv")
head(RawData)
Variable<-read.delim(file="prosperLoanData_variables.tsv")
head(Variable)
)
testsample<- sample_n(tbl = RawData,20)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
RawData$ListingCreationDate<- as.POSIXct(RawData$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram()
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram()+
stat_bin(bins = 60)
ggplot(data=RawData,aes(x=ListingCreationDate),bins=70)+
geom_histogram()
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)
levels(RawData$Occupation)
validate_grouped_df(RawData$Occupation)
unique(RawData$Occupation)
unique(RawData$Occupation)%>%count()
Occupataion_group<- group_by(RawData,Occupataion)
Occupation_group<- group_by(RawData,Occupation)
RawData.Occupation_group<-summarise(Occupation_group)
RawData.Occupation_group<-summarise(Occupation_group,n=())
RawData.Occupation_group<-summarise(Occupation_group,n=n())
View(RawData.Occupation_group)
RawData.Occupation_group<-summarise(Occupation_group,count=n())
ggplot(data = RawData.Occupation_group,aes(x=Occupation,y=count))
RawData.Occupation_group<-arrange(RawData.Occupation_group,count)
ggplot(data = head(RawData.Occupation_group),aes(x=Occupation,y=count))
ggplot(data = head(RawData.Occupation_group,20),aes(x=Occupation,y=count))
ggplot(data = head(RawData.Occupation_group,10),aes(x=Occupation,y=count))
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation,y=count))
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation,y=count))+
geom_bar()
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation))+
geom_bar(y=count)
knitr::opts_chunk$set(echo = TRUE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
# Load the Data
RawData<-read.csv("prosperLoanData.csv")
head(RawData)
Variable<-read.delim(file="prosperLoanData_variables.tsv")
head(Variable)
testsample<- sample_n(tbl = RawData,20)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
RawData$ListingCreationDate<- as.POSIXct(RawData$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)
Occupation_group<- group_by(RawData,Occupation)
RawData.Occupation_group<-summarise(Occupation_group,count=n())
RawData.Occupation_group<-arrange(RawData.Occupation_group,count)
ggplot(data = head(RawData.Occupation_group,15))+
geom_bar(x=y=count)
ggplot(data = head(RawData.Occupation_group,15))+
geom_bar(y=count)
ggplot(data = head(RawData.Occupation_group,15))+
geom_bar(x=count)
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation))+
geom_bar(x=count)
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation))+
geom_bar()
ggplot(data = RawData.Occupation_group,aes(x=Occupation))+
geom_bar()
ggplot(data = RawData.Occupation_group,aes(x=Occupation,y=count))+
geom_bar()
ggplot(data = RawData.Occupation_group,aes(x=Occupation,))+
geom_bar(mapping = count)
ggplot(data = RawData.Occupation_group,aes(x=Occupation,mapping=y))+
geom_bar()
ggplot(data = RawData.Occupation_group,aes(x=Occupation,mapping=count))+
geom_bar()
ggplot(data = RawData.Occupation_group)+
geom_bar()
ggplot(data = RawData.Occupation_group)+
geom_bar(x=Occupation,y=count)
View(Occupation_group)
View(RawData)
View(RawData.Occupation_group)
View(RawData.Occupation_group)
View(RawData.Occupation_group)
View(RawData.Occupation_group)
RawData.Occupation_group<-arrange(RawData.Occupation_group,count)
View(RawData.Occupation_group)
ggplot(data = tail(RawData.Occupation_group,15))+
geom_bar(x=Occupation,y=count)
ggplot(data = tail(RawData.Occupation_group,15),aes=(x=Occupation,y=count))
ggplot(data = tail(RawData.Occupation_group,15),aes=(x=Occupation  , y=count))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
geom_bar()
ggplot(data = tail(RawData,15),aes(x=Occupation  , y=stat_count(Occupation)))+
geom_bar()
knitr::opts_chunk$set(echo = TRUE)
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)+
theme(axis.text.x = element_text(face="bold", color="#993333",
size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333",
size=14, angle=45))
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)
y(ggplot2)
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
read.csv("prosperLoanData.csv")
head(RawData)
Variable<-read.delim(file="prosperLoanData_variables.tsv")
hea
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)+
theme(axis.text.x = element_text(face="bold", color="#993333",
size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333",
size=14, angle=45))
Occupation_group<- group_by(RawData,Occupation)
RawData.Occupation_group<-summarise(Occupation_group,count=n())
RawData.Occupation_group<-arrange(RawData.Occupation_group,-(count))
ggplot(data = tail(RawData,15),aes(x=Occupation  , y=stat_count(Occupation))
ggplot(data = tail(RawData,15),aes(x=Occupation  , y=stat_count(Occupation)))
ggplot(data = tail(RawData,15),aes(x=Occupation  , y=count))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
theme(axis.text.x = element_text(face="bold", color="#993333",
size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333",
size=14, angle=45))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
geom_bar()+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
g<-ggplot(RawData,aes(Occupation))
g+geom_bar()
g<-ggplot(RawData,aes(x=arrange(Occupation))
g<-ggplot(RawData,aes(arrange(Occupation))
g<-ggplot(RawData,aes(Occupation)
g<-ggplot(RawData,aes(Occupation))
g<-ggplot(RawData,Occupation)
g<-ggplot(RawData,aes(Occupation))
g+geom_bar()
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
RawData.Occupation_group<-arrange(RawData.Occupation_group,-(count))
ggplot(data = tail(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
ggplot(data = head(RawData.Occupation_group,15),aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
ggplot(data = RawData.Occupation_group,aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
Occupation_group<- group_by(RawData,Occupation)
RawData.Occupation_group<-summarise(Occupation_group,count=n())
RawData.Occupation_group<-arrange(RawData.Occupation_group,-(count))
ggplot(data = RawData.Occupation_group,aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
ggplot(data = RawData.Occupation_group,aes(x=Occupation  , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
ggplot(data = RawData.Occupation_group,aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
head(RawData.Occupation_group)
head(RawData.Occupation_group,15)
head(RawData.Occupation_group,20)
ggplot(data = head(RawData.Occupation_group,20),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45),
axis.text.y = element_text(size=6, angle=45))
ggplot(data = head(RawData.Occupation_group,20),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=6, angle=45))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45,margin = 10))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45,vjust = 1))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45,hjust = 1))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45,hjust = 1))
```{r}
knitr::opts_chunk$set(echo = TRUE)
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(plyr)
library(GGally)
library(gridExtra)
library(dplyr)
library(reshape2)
library(alr3)
# Load the Data
RawData<-read.csv("prosperLoanData.csv")
head(RawData)
Variable<-read.delim(file="prosperLoanData_variables.tsv")
head(Variable)
testsample<- sample_n(tbl = RawData,20)
testsample$ListingCreationDate<- as.POSIXct(testsample$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
RawData$ListingCreationDate<- as.POSIXct(RawData$ListingCreationDate,format="%Y-%m-%d %H:%M:%S")
ggplot(data=RawData,aes(x=ListingCreationDate))+
geom_histogram(bins=70)+
theme(axis.text.x = element_text(face="bold", color="#993333",
size=14, angle=45),
axis.text.y = element_text(face="bold", color="#993333",
size=14, angle=45))
Occupation_group<- group_by(RawData,Occupation)
RawData.Occupation_group<-summarise(Occupation_group,count=n())
RawData.Occupation_group<-arrange(RawData.Occupation_group,-(count))
ggplot(data = head(RawData.Occupation_group,10),aes(x= reorder(Occupation, -count)   , y=count))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(size=10, angle=45,hjust = 1))
ggplot(data=RawData,aes(x=Occupation))+
geom_bar(bins=70)
#myVar<- c("LoanStaus", "BorrowerRate",
#          "ProsperRating","BorrowerState",'Occupation','EmploymentStatusDuration',
#          'AvailableBankcardCredit','StatedMonthlyIncome','LoanOriginalAmount','MonthlyLoanPayment',
#          'LP_InterestandFees')
#toExplore<-loanData["LoanStaus", "BorrowerRate",
#          "ProsperRating","BorrowerState",'Occupation','EmploymentStatusDuration',
#          'AvailableBankcardCredit','StatedMonthlyIncome','LoanOriginalAmount','MonthlyLoanPayment',
#          'LP_InterestandFees']
ggplot(data=RawData,aes(x=Occupation))+
geom_bar()
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()+
xlim(0,20)
ggplot(data=RawData,aes(x=[reorder(Occupation, -table(Occupation)[Occupation])[,20]))+
geom_bar()
##aes(x=reorder(Position, -table(Position)[Position]))
ggplot(data=RawData,aes(x=[reorder(Occupation, -table(Occupation)[Occupation])[,20]))+
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])[,20]))+
geom_bar()
reorder(RawData$Occupation, -table(RawData$Occupation)[RawData$Occupation])
RawData$Occupation
reorder(Occupation, -table(Occupation)[Occupation])
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()+
xlim(0,20)
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()+
ggplot(data=RawData,aes(x=reorder(Occupation, -table(Occupation)[Occupation])))+
geom_bar()+
